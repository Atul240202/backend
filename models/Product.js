const mongoose = require("mongoose");

const productSchema = new mongoose.Schema({
  id: { type: Number, required: true },
  name: { type: String, required: true },
  slug: { type: String },
  brand: { type: String },
  barcode: { type: String },
  permalink: { type: String },
  date_created: { type: String },
  date_created_gmt: { type: String },
  date_modified: { type: String },
  date_modified_gmt: { type: String },
  type: { type: String },
  status: { type: String },
  featured: { type: Boolean },
  catalog_visibility: { type: String },
  description: { type: String },
  short_description: { type: String },
  sku: { type: String },
  price: { type: String },
  regular_price: { type: String },
  sale_price: { type: String },
  date_on_sale_from: { type: String, default: null },
  date_on_sale_from_gmt: { type: String, default: null },
  date_on_sale_to: { type: String, default: null },
  date_on_sale_to_gmt: { type: String, default: null },
  on_sale: { type: Boolean },
  purchasable: { type: Boolean },
  total_sales: { type: Number, default: 0 },
  virtual: { type: Boolean },
  downloadable: { type: Boolean },
  downloads: [{ type: Object }],
  download_limit: { type: Number },
  download_expiry: { type: Number },
  external_url: { type: String },
  button_text: { type: String },
  tax_status: { type: String },
  tax_class: { type: String },
  hsn: {
    type: String,
    default: "",
  },
  manage_stock: { type: Boolean },
  stock_quantity: { type: Number, default: null },
  backorders: { type: String },
  backorders_allowed: { type: Boolean },
  backordered: { type: Boolean },
  low_stock_amount: { type: Number, default: null },
  sold_individually: { type: Boolean },
  weight: { type: String },
  discount: { type: String },
  dimensions: {
    length: { type: String },
    width: { type: String },
    height: { type: String },
  },
  youtube_vid: { type: String },
  youtubeId: { type: String },
  shipping_amount: { type: Number, default: 200 },
  shipping_required: { type: Boolean },
  shipping_taxable: { type: Boolean },
  shipping_class: { type: String },
  shipping_class_id: { type: Number },
  reviews_allowed: { type: Boolean },
  average_rating: { type: String },
  rating_count: { type: Number },
  upsell_ids: [{ type: Number }],
  cross_sell_ids: [{ type: Number }],
  parent_id: { type: Number },
  purchase_note: { type: String },
  categories: [{ id: Number, name: String, slug: String }],
  departments: [{ id: Number, name: String, slug: String }],
  tags: [{ id: Number, name: String, slug: String }],
  images: [
    {
      id: Number,
      date_created: String,
      date_created_gmt: String,
      date_modified: String,
      date_modified_gmt: String,
      src: String,
      name: String,
      alt: String,
    },
  ],
  attributes: [{ id: Number, name: String, options: [String] }],
  default_attributes: [{ name: String, option: String }],
  variations: [{ type: mongoose.Schema.Types.ObjectId, ref: "MainProducts" }],
  grouped_products: [{ type: Number }],
  menu_order: { type: Number },
  price_html: { type: String },
  related_ids: [{ type: Number }],
  meta_data: [{ id: Number, key: String, value: mongoose.Schema.Types.Mixed }],
  stock_status: { type: String },
  has_options: { type: Boolean },
  post_password: { type: String },
  global_unique_id: { type: String },
  yoast_head: { type: String },
  _links: {
    self: [{ href: String, targetHints: { allow: [String] } }],
    collection: [{ href: String }],
  },
});

productSchema.index({ name: "text", description: "text" });

const Product = mongoose.model("MainProducts", productSchema);

module.exports = Product;
